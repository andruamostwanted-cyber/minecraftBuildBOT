user_filters = {}

class UserFilters:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    @staticmethod
    def get_filters(user_id: int):
        """–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        return user_filters.get(user_id, {
            'build_type': None,
            'style': None,
            'difficulty': None
        })
    
    @staticmethod
    def set_filter(user_id: int, filter_type: str, value: str):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id not in user_filters:
            user_filters[user_id] = {
                'build_type': None,
                'style': None,
                'difficulty': None
            }
        user_filters[user_id][filter_type] = value
    
    @staticmethod
    def clear_filters(user_id: int):
        """–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in user_filters:
            user_filters[user_id] = {
                'build_type': None,
                'style': None,
                'difficulty': None
            }
    
    @staticmethod
    def get_active_filters_text(user_id: int):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏"""
        filters = UserFilters.get_filters(user_id)
        active_filters = []
        
        if filters['build_type']:
            build_types = {
                'survival': 'üèïÔ∏è –í—ã–∂–∏–≤–∞–Ω–∏–µ',
                'adventure': 'üó∫Ô∏è –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ/–†–ü–ì', 
                'hardcore': 'üíÄ –•–∞—Ä–¥–∫–æ—Ä',
                'puzzle': 'üß© –ü–∞–∑–ª/–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞',
                'creative': 'üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
                'minigame': 'üéØ –ú–∏–Ω–∏-–∏–≥—Ä—ã'
            }
            active_filters.append(f"–¢–∏–ø: {build_types[filters['build_type']]}")
        
        if filters['style']:
            styles = {
                'fantasy': 'üßô‚Äç‚ôÇÔ∏è –§—ç–Ω—Ç–µ–∑–∏',
                'medieval': 'üè∞ –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å–µ',
                'postapocalyptic': '‚ò¢Ô∏è –ü–æ—Å—Ç–∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å',
                'scifi': 'üöÄ –¢–µ—Ö–Ω–æ/–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞',
                'modern': 'üèôÔ∏è –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∏—Ä',
                'fairytale': 'üåà –°–∫–∞–∑–æ—á–Ω—ã–π/–ú—É–ª—å—Ç—è—à–Ω—ã–π'
            }
            active_filters.append(f"–°—Ç–∏–ª—å: {styles[filters['style']]}")
            
        if filters['difficulty']:
            difficulties = {
                'beginner': 'üü¢ –î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤',
                'intermediate': 'üü° –°—Ä–µ–¥–Ω—è—è', 
                'expert': 'üî¥ –î–ª—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤'
            }
            active_filters.append(f"–°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulties[filters['difficulty']]}")
        
        if not active_filters:
            return "‚ùå –§–∏–ª—å—Ç—Ä—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã"
        
        return "‚úÖ " + " | ".join(active_filters)